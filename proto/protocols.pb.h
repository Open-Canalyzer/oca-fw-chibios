/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7 at Sat Feb 18 16:36:04 2017. */

#ifndef PB_PROTOCOLS_PB_H_INCLUDED
#define PB_PROTOCOLS_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _CanMessage {
    uint32_t DLC;
    uint32_t RTR;
    uint32_t IDE;
    uint32_t ID;
    uint32_t Data1;
    uint32_t Data2;
/* @@protoc_insertion_point(struct:CanMessage) */
} CanMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define CanMessage_init_default                  {0, 0, 0, 0, 0, 0}
#define CanMessage_init_zero                     {0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define CanMessage_DLC_tag                       1
#define CanMessage_RTR_tag                       2
#define CanMessage_IDE_tag                       3
#define CanMessage_ID_tag                        4
#define CanMessage_Data1_tag                     5
#define CanMessage_Data2_tag                     6

/* Struct field encoding specification for nanopb */
extern const pb_field_t CanMessage_fields[7];

/* Maximum encoded size of messages (where known) */
#define CanMessage_size                          36

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define PROTOCOLS_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
